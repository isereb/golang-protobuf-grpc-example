// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ExampleMessage.proto

package protox

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExampleRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Number               int32    `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExampleRequest) Reset()         { *m = ExampleRequest{} }
func (m *ExampleRequest) String() string { return proto.CompactTextString(m) }
func (*ExampleRequest) ProtoMessage()    {}
func (*ExampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcd78109efa1abda, []int{0}
}

func (m *ExampleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleRequest.Unmarshal(m, b)
}
func (m *ExampleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleRequest.Marshal(b, m, deterministic)
}
func (m *ExampleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleRequest.Merge(m, src)
}
func (m *ExampleRequest) XXX_Size() int {
	return xxx_messageInfo_ExampleRequest.Size(m)
}
func (m *ExampleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleRequest proto.InternalMessageInfo

func (m *ExampleRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ExampleRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ExampleResponse struct {
	Greeting             string   `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Response             string   `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExampleResponse) Reset()         { *m = ExampleResponse{} }
func (m *ExampleResponse) String() string { return proto.CompactTextString(m) }
func (*ExampleResponse) ProtoMessage()    {}
func (*ExampleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcd78109efa1abda, []int{1}
}

func (m *ExampleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleResponse.Unmarshal(m, b)
}
func (m *ExampleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleResponse.Marshal(b, m, deterministic)
}
func (m *ExampleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleResponse.Merge(m, src)
}
func (m *ExampleResponse) XXX_Size() int {
	return xxx_messageInfo_ExampleResponse.Size(m)
}
func (m *ExampleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleResponse proto.InternalMessageInfo

func (m *ExampleResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

func (m *ExampleResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*ExampleRequest)(nil), "protox.ExampleRequest")
	proto.RegisterType((*ExampleResponse)(nil), "protox.ExampleResponse")
}

func init() { proto.RegisterFile("ExampleMessage.proto", fileDescriptor_dcd78109efa1abda) }

var fileDescriptor_dcd78109efa1abda = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x71, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xf5, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0x03, 0x53, 0x15, 0x4a, 0x4e, 0x5c, 0x7c, 0x50, 0xf9, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4,
	0xe2, 0x12, 0x21, 0x09, 0x2e, 0xf6, 0x5c, 0x88, 0x52, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20,
	0x18, 0x57, 0x48, 0x8c, 0x8b, 0x2d, 0xaf, 0x34, 0x37, 0x29, 0xb5, 0x48, 0x82, 0x49, 0x81, 0x51,
	0x83, 0x35, 0x08, 0xca, 0x53, 0xf2, 0xe4, 0xe2, 0x87, 0x9b, 0x51, 0x5c, 0x90, 0x9f, 0x57, 0x9c,
	0x2a, 0x24, 0xc5, 0xc5, 0x91, 0x5e, 0x94, 0x9a, 0x5a, 0x92, 0x99, 0x97, 0x0e, 0x35, 0x05, 0xce,
	0x07, 0xc9, 0x15, 0x41, 0xd5, 0x81, 0x0d, 0xe2, 0x0c, 0x82, 0xf3, 0x8d, 0x7a, 0x18, 0xb9, 0xf8,
	0xa0, 0x0e, 0xf1, 0x48, 0xcc, 0x4b, 0xc9, 0x49, 0x2d, 0x12, 0xb2, 0xe1, 0xe2, 0x84, 0x30, 0xfd,
	0xf3, 0x52, 0x85, 0xc4, 0x20, 0xce, 0xaf, 0xd0, 0x43, 0x75, 0xb4, 0x94, 0x38, 0x86, 0x38, 0xd4,
	0x21, 0x70, 0xdd, 0x21, 0xe5, 0xf9, 0x24, 0xeb, 0x4e, 0x82, 0x84, 0x92, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0xc0, 0xc9, 0x67, 0x1f, 0x44, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RequestHandlerClient is the client API for RequestHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RequestHandlerClient interface {
	HandleOne(ctx context.Context, in *ExampleRequest, opts ...grpc.CallOption) (*ExampleResponse, error)
	HandleTwo(ctx context.Context, in *ExampleRequest, opts ...grpc.CallOption) (*ExampleResponse, error)
}

type requestHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewRequestHandlerClient(cc grpc.ClientConnInterface) RequestHandlerClient {
	return &requestHandlerClient{cc}
}

func (c *requestHandlerClient) HandleOne(ctx context.Context, in *ExampleRequest, opts ...grpc.CallOption) (*ExampleResponse, error) {
	out := new(ExampleResponse)
	err := c.cc.Invoke(ctx, "/protox.RequestHandler/HandleOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *requestHandlerClient) HandleTwo(ctx context.Context, in *ExampleRequest, opts ...grpc.CallOption) (*ExampleResponse, error) {
	out := new(ExampleResponse)
	err := c.cc.Invoke(ctx, "/protox.RequestHandler/HandleTwo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RequestHandlerServer is the server API for RequestHandler service.
type RequestHandlerServer interface {
	HandleOne(context.Context, *ExampleRequest) (*ExampleResponse, error)
	HandleTwo(context.Context, *ExampleRequest) (*ExampleResponse, error)
}

// UnimplementedRequestHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedRequestHandlerServer struct {
}

func (*UnimplementedRequestHandlerServer) HandleOne(ctx context.Context, req *ExampleRequest) (*ExampleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleOne not implemented")
}
func (*UnimplementedRequestHandlerServer) HandleTwo(ctx context.Context, req *ExampleRequest) (*ExampleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleTwo not implemented")
}

func RegisterRequestHandlerServer(s *grpc.Server, srv RequestHandlerServer) {
	s.RegisterService(&_RequestHandler_serviceDesc, srv)
}

func _RequestHandler_HandleOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestHandlerServer).HandleOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protox.RequestHandler/HandleOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestHandlerServer).HandleOne(ctx, req.(*ExampleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RequestHandler_HandleTwo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestHandlerServer).HandleTwo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protox.RequestHandler/HandleTwo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestHandlerServer).HandleTwo(ctx, req.(*ExampleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RequestHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protox.RequestHandler",
	HandlerType: (*RequestHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleOne",
			Handler:    _RequestHandler_HandleOne_Handler,
		},
		{
			MethodName: "HandleTwo",
			Handler:    _RequestHandler_HandleTwo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ExampleMessage.proto",
}
